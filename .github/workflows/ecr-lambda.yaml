name: "AWS ECR: lambda"

on:
  workflow_dispatch:
  push:
    paths:
      - "lambda/**"
    branches:
      - main

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: ./lambda/package.json
      - name: make test
        run: |
          cd lambda
          pnpm install
          pnpm test
        env:
          AUTHZ_HEADER: ${{ secrets.AUTHZ_HEADER }}
          AUTHZ_HOST: ${{ secrets.AUTHZ_HOST }}
          AUTHZ_PATH: ${{ secrets.AUTHZ_PATH }}
          AUTHZ_PORT: ${{ secrets.AUTHZ_PORT }}

  build:
    name: Build Image
    runs-on: ubuntu-latest
    environment: CI
    needs: test

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_OIDC }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Prep metadata for docker
        id: prep
        run: |
          echo "::set-output name=tags::${AWS_ECR_REPOSITORY}/lambda"
        env:
          AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.prep.outputs.tags }}
          tags: |
            type=sha,priority=700
            type=raw,value=latest,priority=600

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: ./lambda
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: app
